// Lc 924
// https://leetcode.com/problems/minimize-malware-spread/description/

// TC = O(N+E)  also O(N log N for sorting initial)
// TC = O(N+E)

class Solution {
    int size;
    int infected;
    public void dfs(int src, boolean[] vis, int[][] graph, int[]initial){
        if(vis[src] == true) return;

        vis[src] = true;
        size++;

        if(Arrays.binarySearch(initial, src) >= 0) infected++;

        for(int nbr = 0; nbr < graph.length; nbr++){
            if(graph[nbr][src] == 1){
                dfs(nbr, vis, graph, initial);
            }
        }
    }
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);

        boolean[] vis = new boolean[graph.length];
        int maxSize = 0;
        int ans = initial[0];

        for(int src : initial){
            size = 0;
            infected = 0;
            dfs(src, vis, graph, initial);

            if(size > maxSize && infected == 1){
                ans = src;
                maxSize = size;
            }
        }
        return ans;
    }
}
